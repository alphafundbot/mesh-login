"use client"

import {
  Radar,
  RadarChart,
  PolarGrid,
  PolarAngleAxis,
  PolarRadiusAxis,
  ResponsiveContainer,
  Legend,
  Tooltip,
} from "recharts"
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card"
import { Bot } from "lucide-react"

// This data would be generated by a cross-domain analysis AI flow
const chartData = [
  {
    domain: "System Core",
    stability: 95,
    security: 90,
    activity: 70,
  },
  {
    domain: "Finance",
    stability: 60,
    security: 75,
    activity: 95,
  },
  {
    domain: "Security",
    stability: 85,
    security: 98,
    activity: 80,
  },
  {
    domain: "Cloud & DevOps",
    stability: 90,
    security: 88,
    activity: 65,
  },
  {
    domain: "Telecom & IoT",
    stability: 70,
    security: 65,
    activity: 85,
  },
]

export default function IntelligenceMap() {
  return (
    <Card className="mb-6">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
            <Bot className="h-6 w-6 text-accent" />
            Cross-Domain Intelligence Map
        </CardTitle>
        <CardDescription>
          AI-synthesized view of system mesh health across key domains.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="h-[400px] w-full">
            <ResponsiveContainer width="100%" height="100%">
                <RadarChart cx="50%" cy="50%" outerRadius="80%" data={chartData}>
                    <defs>
                        <linearGradient id="colorStability" x1="0" y1="0" x2="0" y2="1">
                            <stop offset="5%" stopColor="hsl(var(--primary))" stopOpacity={0.8}/>
                            <stop offset="95%" stopColor="hsl(var(--primary))" stopOpacity={0}/>
                        </linearGradient>
                         <linearGradient id="colorSecurity" x1="0" y1="0" x2="0" y2="1">
                            <stop offset="5%" stopColor="hsl(var(--accent))" stopOpacity={0.8}/>
                            <stop offset="95%" stopColor="hsl(var(--accent))" stopOpacity={0}/>
                        </linearGradient>
                    </defs>
                    <PolarGrid />
                    <PolarAngleAxis dataKey="domain" tick={{ fill: 'hsl(var(--muted-foreground))', fontSize: 12 }} />
                    <PolarRadiusAxis angle={30} domain={[0, 100]} tick={false} axisLine={false} />
                    <Tooltip
                        contentStyle={{
                            backgroundColor: 'hsl(var(--card))',
                            borderColor: 'hsl(var(--border))',
                        }}
                    />
                    <Legend wrapperStyle={{ fontSize: "14px" }}/>
                    <Radar name="Stability" dataKey="stability" stroke="hsl(var(--primary))" fill="hsl(var(--primary))" fillOpacity={0.6} />
                    <Radar name="Security" dataKey="security" stroke="hsl(var(--accent))" fill="hsl(var(--accent))" fillOpacity={0.6} />
                    <Radar name="Activity" dataKey="activity" stroke="hsl(var(--chart-1))" fill="hsl(var(--chart-1))" fillOpacity={0.6} />
                </RadarChart>
            </ResponsiveContainer>
        </div>
      </CardContent>
    </Card>
  )
}
